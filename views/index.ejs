<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TextVault - Your Personal Note Manager</title>
    <script>
        // Prevent flash of wrong theme - this must run before any CSS loads
        (function() {
            const savedTheme = localStorage.getItem('theme') || 'dark';
            document.documentElement.classList.toggle('dark', savedTheme === 'dark');
        })();
    </script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            500: '#3b82f6',
                            600: '#2563eb',
                            700: '#1d4ed8',
                            900: '#1e3a8a'
                        }
                    }
                }
            }
        }
    </script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        * { font-family: 'Inter', sans-serif; }
        .card-hover { transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); }
        .card-hover:hover { transform: translateY(-4px); }
        
        .floating-label { 
            position: relative; 
            margin-top: 1.5rem; /* Add space for the floating label */
        }
        
        .floating-label label { 
            position: absolute;
            left: 1rem;
            top: 0.75rem;
            background: white;
            padding: 0 0.5rem;
            color: #6b7280;
            transition: all 0.3s ease;
            pointer-events: none;
            z-index: 10;
        }
        
        .dark .floating-label label {
            background: #1f2937;
            color: #9ca3af;
        }
        
        .floating-label input:focus + label,
        .floating-label textarea:focus + label,
        .floating-label input:not(:placeholder-shown) + label,
        .floating-label textarea:not(:placeholder-shown) + label,
        .floating-label.has-value label {
            transform: translateY(-2rem) scale(0.875);
            color: #3b82f6;
        }
        
        .floating-label input,
        .floating-label textarea {
            padding-top: 0.75rem;
            padding-bottom: 0.75rem;
        }
    </style>
</head>
<body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-300">
    <!-- Header -->
    <header class="bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                        <i data-lucide="file-text" class="w-4 h-4 text-white"></i>
                    </div>
                    <h1 class="text-xl font-bold text-gray-900 dark:text-white">TextVault</h1>
                </div>
                <button 
                    id="theme-toggle" 
                    class="p-2 rounded-lg bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200"
                    aria-label="Toggle theme">
                    <i data-lucide="sun" class="w-5 h-5 text-gray-700 dark:text-gray-300 dark:hidden"></i>
                    <i data-lucide="moon" class="w-5 h-5 text-gray-300 hidden dark:block"></i>
                </button>
            </div>
        </div>
    </header>

    <!-- Main Container -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Create Note Section -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
            <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
                <i data-lucide="plus-circle" class="w-5 h-5 mr-2 text-blue-500"></i>
                Create New Note
            </h2>
            <form action="/create" method="post" class="space-y-6">
                <div class="floating-label">
                    <input 
                        type="text" 
                        name="title" 
                        id="title"
                        class="block w-full px-4 py-3 text-gray-900 dark:text-white bg-transparent border-2 border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200 placeholder-transparent"
                        placeholder="Note title"
                        required>
                    <label for="title">Note Title</label>
                </div>
                <div class="floating-label">
                    <textarea 
                        name="details" 
                        id="details"
                        rows="4"
                        class="block w-full px-4 py-3 text-gray-900 dark:text-white bg-transparent border-2 border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200 placeholder-transparent resize-none"
                        placeholder="Write your note content here..."
                        required></textarea>
                    <label for="details">Note Content</label>
                </div>
                <button 
                    type="submit" 
                    class="w-full sm:w-auto px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-medium rounded-lg shadow-md hover:shadow-lg transition-all duration-200 flex items-center justify-center space-x-2">
                    <i data-lucide="save" class="w-4 h-4"></i>
                    <span>Create Note</span>
                </button>
            </form>
        </div>

        <!-- Notes Grid -->
        <div class="mb-4 flex items-center justify-between">
            <h2 class="text-lg font-semibold text-gray-900 dark:text-white flex items-center">
                <i data-lucide="folder" class="w-5 h-5 mr-2 text-blue-500"></i>
                Your Notes
                <span class="ml-2 text-sm font-normal text-gray-500 dark:text-gray-400">(<%= files.length %>)</span>
            </h2>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            <% if (files.length > 0) { %>
                <% files.forEach(function(val) { %>
                    <div class="card-hover bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-5 relative group">
                        <div class="flex items-start justify-between mb-3">
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-white truncate pr-2 flex-1">
                                <%= val.replace('.txt', '') %>
                            </h3>
                            <div class="flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                <a 
                                    href="/edit/<%= val %>" 
                                    class="p-1.5 rounded-md bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 hover:bg-blue-100 dark:hover:bg-blue-900/40 transition-colors duration-200"
                                    title="Edit note">
                                    <i data-lucide="edit" class="w-4 h-4"></i>
                                </a>
                                <form action="/delete" method="post" class="inline">
                                    <input type="hidden" name="filename" value="<%= val %>">
                                    <button 
                                        type="submit" 
                                        class="p-1.5 rounded-md bg-red-50 dark:bg-red-900/20 text-red-600 dark:text-red-400 hover:bg-red-100 dark:hover:bg-red-900/40 transition-colors duration-200"
                                        title="Delete note"
                                        onclick="return confirm('Are you sure you want to delete this note?')">
                                        <i data-lucide="trash-2" class="w-4 h-4"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                        
                        <div class="mb-4">
                            <div class="w-full h-px bg-gradient-to-r from-transparent via-gray-300 dark:via-gray-600 to-transparent"></div>
                        </div>
                        
                        <div class="flex items-center justify-between">
                            <a 
                                href="/files/<%= val %>" 
                                class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors duration-200">
                                <i data-lucide="eye" class="w-4 h-4 mr-1"></i>
                                <span>Read Note</span>
                            </a>
                            <div class="flex items-center text-xs text-gray-500 dark:text-gray-400">
                                <i data-lucide="file-text" class="w-3 h-3 mr-1"></i>
                                <span>.txt</span>
                            </div>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="col-span-full text-center py-12">
                    <div class="flex flex-col items-center">
                        <div class="w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mb-4">
                            <i data-lucide="file-text" class="w-8 h-8 text-gray-400"></i>
                        </div>
                        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No notes yet</h3>
                        <p class="text-gray-500 dark:text-gray-400">Create your first note to get started</p>
                    </div>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Footer -->
    <footer class="mt-16 py-8 border-t border-gray-200 dark:border-gray-700">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center text-gray-500 dark:text-gray-400">
                <p>&copy; 2025 TextVault. Built with ❤️ for better note-taking.</p>
            </div>
        </div>
    </footer>

    <script>
        // Initialize Lucide icons
        lucide.createIcons();

        // Theme toggle functionality (simplified since theme is already applied)
        const themeToggle = document.getElementById('theme-toggle');
        const html = document.documentElement;

        themeToggle.addEventListener('click', () => {
            const isDark = html.classList.contains('dark');
            html.classList.toggle('dark', !isDark);
            localStorage.setItem('theme', !isDark ? 'dark' : 'light');
        });

        // Auto-resize textarea and handle floating labels
        const textarea = document.getElementById('details');
        const titleInput = document.getElementById('title');
        
        function checkInputValue(input) {
            const floatingLabel = input.closest('.floating-label');
            if (input.value.trim() !== '') {
                floatingLabel.classList.add('has-value');
            } else {
                floatingLabel.classList.remove('has-value');
            }
        }
        
        // Check initial values
        checkInputValue(titleInput);
        checkInputValue(textarea);
        
        // Add event listeners for real-time checking
        titleInput.addEventListener('input', function() {
            checkInputValue(this);
        });
        
        textarea.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
            checkInputValue(this);
        });

        // Add smooth animations to cards
        const cards = document.querySelectorAll('.card-hover');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.1}s`;
            card.classList.add('opacity-0', 'translate-y-4');
            
            setTimeout(() => {
                card.classList.remove('opacity-0', 'translate-y-4');
                card.classList.add('opacity-100', 'translate-y-0');
                card.style.transition = 'all 0.5s ease-out';
            }, index * 100);
        });
    </script>
</body>
</html>
